{"version":3,"file":"_---slug_.astro.mjs","sources":["../../../../src/layouts/BlogPost.astro","../../../../src/pages/blog/[...slug].astro"],"sourcesContent":["---\nimport type { CollectionEntry } from \"astro:content\";\nimport BaseHead from \"../components/BaseHead.astro\";\nimport Header from \"../components/Header.astro\";\nimport Footer from \"../components/Footer.astro\";\nimport FormattedDate from \"../components/FormattedDate.astro\";\n\nimport \"@/styles/globals.css\";\n\ntype Props = CollectionEntry<\"blog\">[\"data\"];\n\nconst { title, description, pubDate, updatedDate, heroImage } = Astro.props;\n---\n\n<!doctype html>\n<html lang=\"fr\">\n  <head>\n    <BaseHead title={title} description={description} />\n  </head>\n\n  <body class=\"bg-gray-50\">\n    <Header />\n    <main class=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <article class=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n        {\n          heroImage && (\n            <img class=\"w-full h-96 object-cover\" src={heroImage} alt=\"\" />\n          )\n        }\n        <div class=\"p-8\">\n          <div class=\"mb-8\">\n            <h1 class=\"text-4xl font-bold text-gray-900 mb-4\">{title}</h1>\n            <div class=\"flex items-center text-gray-600\">\n              <span class=\"mr-4\">\n                <FormattedDate date={pubDate} />\n              </span>\n              {\n                updatedDate && (\n                  <div class=\"text-sm\">\n                    Dernière mise à jour le <FormattedDate date={updatedDate} />\n                  </div>\n                )\n              }\n            </div>\n          </div>\n          <div class=\"prose prose-lg max-w-none\">\n            <slot />\n          </div>\n        </div>\n      </article>\n\n      <div class=\"mt-12 text-center\">\n        <a\n          href=\"/blog\"\n          class=\"inline-flex items-center text-info hover:text-info/80\"\n        >\n          <svg\n            class=\"w-5 h-5 mr-2\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path>\n          </svg>\n          Retour aux articles\n        </a>\n      </div>\n    </main>\n    <Footer />\n  </body>\n</html>\n","---\nimport { type CollectionEntry, getCollection } from \"astro:content\";\nimport BlogPost from \"../../layouts/BlogPost.astro\";\nimport { render } from \"astro:content\";\n\nexport async function getStaticPaths() {\n  const posts = await getCollection(\"blog\");\n  return posts.map((post) => ({\n    params: { slug: post.id },\n    props: post,\n  }));\n}\ntype Props = CollectionEntry<\"blog\">;\n\nconst post = Astro.props;\nconst { Content } = await render(post);\n---\n\n<BlogPost {...post.data}>\n  <Content />\n</BlogPost>\n"],"names":["$$Astro","$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","BaseHead","$$renderHead","Header","$$addAttribute","FormattedDate","$$renderSlot","Footer","render","BlogPost","$$result"],"mappings":"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"}