{"version":3,"file":"sharp_DXVLBBE9.mjs","sources":["../../../node_modules/.pnpm/astro@5.4.1_@netlify+blobs@8.1.1_jiti@1.21.7_rollup@4.30.1_typescript@5.7.2_yaml@2.7.0/node_modules/astro/dist/assets/services/sharp.js"],"sourcesContent":["import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport {\n  baseService,\n  parseQuality\n} from \"./service.js\";\nlet sharp;\nconst qualityTable = {\n  low: 25,\n  mid: 50,\n  high: 80,\n  max: 100\n};\nasync function loadSharp() {\n  let sharpImport;\n  try {\n    sharpImport = (await import(\"sharp\")).default;\n  } catch {\n    throw new AstroError(AstroErrorData.MissingSharp);\n  }\n  sharpImport.cache(false);\n  return sharpImport;\n}\nconst fitMap = {\n  fill: \"fill\",\n  contain: \"inside\",\n  cover: \"cover\",\n  none: \"outside\",\n  \"scale-down\": \"inside\",\n  outside: \"outside\",\n  inside: \"inside\"\n};\nconst sharpService = {\n  validateOptions: baseService.validateOptions,\n  getURL: baseService.getURL,\n  parseURL: baseService.parseURL,\n  getHTMLAttributes: baseService.getHTMLAttributes,\n  getSrcSet: baseService.getSrcSet,\n  async transform(inputBuffer, transformOptions, config) {\n    if (!sharp) sharp = await loadSharp();\n    const transform = transformOptions;\n    if (transform.format === \"svg\") return { data: inputBuffer, format: \"svg\" };\n    const result = sharp(inputBuffer, {\n      failOnError: false,\n      pages: -1,\n      limitInputPixels: config.service.config.limitInputPixels\n    });\n    result.rotate();\n    const withoutEnlargement = Boolean(transform.fit);\n    if (transform.width && transform.height && transform.fit) {\n      const fit = fitMap[transform.fit] ?? \"inside\";\n      result.resize({\n        width: Math.round(transform.width),\n        height: Math.round(transform.height),\n        fit,\n        position: transform.position,\n        withoutEnlargement\n      });\n    } else if (transform.height && !transform.width) {\n      result.resize({\n        height: Math.round(transform.height),\n        withoutEnlargement\n      });\n    } else if (transform.width) {\n      result.resize({\n        width: Math.round(transform.width),\n        withoutEnlargement\n      });\n    }\n    if (transform.format) {\n      let quality = void 0;\n      if (transform.quality) {\n        const parsedQuality = parseQuality(transform.quality);\n        if (typeof parsedQuality === \"number\") {\n          quality = parsedQuality;\n        } else {\n          quality = transform.quality in qualityTable ? qualityTable[transform.quality] : void 0;\n        }\n      }\n      result.toFormat(transform.format, { quality });\n    }\n    const { data, info } = await result.toBuffer({ resolveWithObject: true });\n    return {\n      data,\n      format: info.format\n    };\n  }\n};\nvar sharp_default = sharpService;\nexport {\n  sharp_default as default\n};\n"],"names":["AstroErrorData.MissingSharp"],"mappings":"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","x_google_ignoreList":[0]}